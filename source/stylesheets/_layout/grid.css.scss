@import "compass";
@import "susy";

@include border-box-sizing;

$total-columns  : 6; //default number of columns for the smallest display in your layout
$column-width   : 4em; 
$gutter-width   : 1em;
$grid-padding   : 3em; //padding on L/R of container grid
$smallscreen: 6;
$tablet : 6;
$bigscreen : 10; //9.6 columns w/ gutters fit in 768px - ipad 1 horizontal - this is the choosen break width for 'mobile' viewing

article {
  div.project {
      @include container(6);
      //@include susy-grid-background;  
      @include at-breakpoint(8) {
        @include container;
        //@include susy-grid-background;  
      }
      @include at-breakpoint(10) {
        @include container;
        //@include susy-grid-background;  
      }
      @include at-breakpoint(12) {
        @include container;
        //@include susy-grid-background;  
      }
      @include at-breakpoint(14) {
        @include container;
        //@include susy-grid-background;  
      }
      @include at-breakpoint(16) {
        @include container;
        //@include susy-grid-background;  
      }
      @include at-breakpoint(18) {
        @include container;
        //@include susy-grid-background;  
      }
  }
  .placeholder {
    clear: both;
    @include span-columns(6);
    @include at-breakpoint($bigscreen) {
      @include span-columns(8);
      @include squish(1,1);
    }
  }
  .project-details {
    clear: both;
    @include span-columns(6);
    @include at-breakpoint($bigscreen) {
      @include span-columns(6,10);
      @include squish(2,2);
    }
  }
}

article.feed {
  @include container(6);
  @include rem(padding, 0 1rem);
  &:first-child {
    @include rem(padding, 6rem 0 0 0);
  }
  @include at-breakpoint(8) {
    @include rem(padding, 0 3rem);
    &:first-child {
      @include rem(padding, 6rem 0 0 0);
    }
    @include container;
  }
  @include at-breakpoint(10) {
    @include container;
    &:first-child {
      @include rem(padding, 10rem 0 0 0);
    }
    //@include susy-grid-background;  
  }
  @include at-breakpoint(12) {
    @include container;
    //@include susy-grid-background;  
  }
  @include at-breakpoint(14) {
    @include container;
    //@include susy-grid-background;  
  }
  .post-container {
    display: table;
    width: 100%;
    .post-type {
      width: 100%;
      @include at-breakpoint($bigscreen) {
        display: table-cell;
        width: 15%;
        vertical-align: middle;
      }
      //@include span-columns(1,6);
    }
    .post-content {
      width: 100%;
      @include at-breakpoint($bigscreen) {
        display: table-cell;
        width: 70%;
      } 
    }
    .post-date, .latest-pins {
      width: 100%;
      @include at-breakpoint($bigscreen) {
        width: 15%;
        vertical-align: middle;
      }
    }
    .latest-pins {
      @include at-breakpoint($bigscreen) {
        display: table-cell;
      }
    }
    .post-date {
      display: none;
      @include at-breakpoint($bigscreen) {
        display: table-cell;
      }
    }
    .post-date.mobile {
      display: block;
      @include at-breakpoint($bigscreen) {
        display: none;
      }
    }
  }
}

section {
  margin: 0;
  padding: 0;
  .content {
    @include container(6);
    @include rem(padding, 0 1rem);
    @include at-breakpoint(8) {
      @include rem(padding, 0 3rem);
      @include container;
    }
    @include at-breakpoint(10) {
      @include container;
    }
    @include at-breakpoint(12) {
      @include container;
    }
    @include at-breakpoint(14) {
      @include container;
    }
    .section-title {
      @include span-columns(6,6);
      @include nth-omega(1n);
    }
  }
}

article {
  div.project {
    .grid-half {
      @include span-columns(3,6);
      clear: both;
    }

    .grid-half-right {
      @include span-columns(3,6);
      @include pre(3);
      clear: both;
    }

    .grid-third {
      @include span-columns(2,6);
      clear: both;
    }

    .grid-third-right {
      @include span-columns(2,6);
      @include nth-omega(6n);
      @include pre(4);
      clear: both;
    }

    .grid-two-thirds {
      @include span-columns(4,6);
      clear: both;
    }
    
    .grid-two-thirds-right {
      @include span-columns(5,6);
      @include nth-omega(6n);
      @include pre(1);
      clear: both;
    }

    .grid-quarter {
      @include span-columns(1,4);
      @include nth-omega(4n);
      clear: both;
    }

    .grid-quarter-right {
      @include span-columns(1,4);
      @include nth-omega(4n);
      @include pre(4);
      clear: both;
    }
  }
}

.contact {
  ul {
    @include container(6);
      @include at-breakpoint(8) {
        @include container;
      }
      @include at-breakpoint(10) {
        @include container;
      }
  }
}

.main {
  position: relative;
  width: 100%;
  //iOS flicker fix
  -webkit-backface-visibility: hidden;
  -webkit-perspective: 1000;
}

.mobile {
  display: inherit;
} 
